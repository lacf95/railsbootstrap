#!/usr/bin/env bash

set -e

# Arguments processing
RUBY_VERSION="3.1.4"
RAILS_VERSION=

while getopts "r:s:" flag; do
  case "${flag}" in
    r) RUBY_VERSION="${OPTARG}" ;;
    s) RAILS_VERSION="${OPTARG}" ;;
    *) ;;
  esac
done

shift "$((OPTIND - 1))"

APP_PATH="${1:-./sample-app}"
APP_NAME="${APP_PATH##*/}"

# Extract Ruby minor version
while IFS=\= read line; do
    A+=($line)
done < <(echo "${RUBY_VERSION}" \
  | grep -o "[[:digit:]]\+\.*" | sed "s/\.//g")
RUBY_MINOR_VERSION="${A[0]}.${A[1]:-0}.0"

# User info for Non-root installation
if [ "$(uname -s)" = "Linux" ]; then
  U_NAME=$(whoami)
  U_UID=$(id -u)
  U_GID=$(id -g)
else
  U_NAME=docker
  U_UID=1000
  U_GID=1000
fi

echo "[ railsdocker ] Creating new Ruby on Rails application"
docker build \
  --build-arg U_NAME="${U_NAME}" \
  --build-arg U_UID="${U_UID}" \
  --build-arg U_GID="${U_GID}" \
  --build-arg APP_NAME="${APP_NAME}" \
  --build-arg RUBY_VERSION="${RUBY_VERSION}" \
  --build-arg RAILS_VERSION="${RAILS_VERSION}" \
  -f install.Dockerfile \
  -t new_rails:latest .

docker run --name "${APP_NAME}" new_rails:latest

docker cp "${APP_NAME}:/home/${U_NAME}/${APP_NAME}/." "${APP_PATH}"

docker rm "${APP_NAME}"

echo "[ railsdocker ] Generating docker compose setup"

cp docker-compose.yml Dockerfile \
  docker-entrypoint.sh .bashrc .bash_history .irb_history "${APP_PATH}"

cp ./docker "${APP_PATH}/bin"

sed -i.bak "s/\${APP_NAME}/${APP_NAME}/g" \
  "${APP_PATH}/docker-compose.yml" \
  "${APP_PATH}/docker-entrypoint.sh" \
  "${APP_PATH}/Dockerfile"

rm "${APP_PATH}/docker-compose.yml.bak" \
  "${APP_PATH}/docker-entrypoint.sh.bak"

sed -i.bak "s/\${RUBY_VERSION}/${RUBY_VERSION}/g" \
  "${APP_PATH}/Dockerfile"

sed -i.bak "s/\${RUBY_MINOR_VERSION}/${RUBY_MINOR_VERSION}/g" \
  "${APP_PATH}/Dockerfile"

rm "${APP_PATH}/Dockerfile.bak"

echo "[ railsdocker ] Configuring database credentials"

sed -i.bak \
  '/pool\:/a\'$'\n''  username: <%= ENV.fetch("DB_USERNAME") { "postgres" } %>'$'\n''' \
  "${APP_PATH}/config/database.yml"

sed -i.bak \
  '/username\:/a\'$'\n''  password: <%= ENV.fetch("DB_PASSWORD") { "password" } %>'$'\n''' \
  "${APP_PATH}/config/database.yml"

sed -i.bak \
  '/password\:/a\'$'\n''  host: <%= ENV.fetch("DB_HOST") { "localhost" } %>'$'\n''' \
  "${APP_PATH}/config/database.yml"

rm "${APP_PATH}/config/database.yml.bak"

echo "[ railsdocker ] Adding redis to the Gemfile"

sed -i.bak "/gem 'redis'/s/^# //g" \
  "${APP_PATH}/Gemfile"

echo "[ railsdocker ] Adding bcrypt to the Gemfile"

sed -i.bak "/gem 'bcrypt'/s/^# //g" \
  "${APP_PATH}/Gemfile"

echo "[ railsdocker ] Adding image_processing to the Gemfile"

sed -i.bak "/gem 'image_processing'/s/^# //g" \
  "${APP_PATH}/Gemfile"

rm "${APP_PATH}/Gemfile.bak"

echo "[ railsdocker ] Done"
